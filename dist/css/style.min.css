/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */.hamburger{padding:15px;display:inline-block;cursor:pointer;transition-property:opacity,filter;transition-duration:.15s;transition-timing-function:linear;font:inherit;color:inherit;text-transform:none;background-color:transparent;border:0;margin:0;overflow:visible}.hamburger.is-active:hover,.hamburger:hover{opacity:.7}.hamburger.is-active .hamburger-inner,.hamburger.is-active .hamburger-inner:after,.hamburger.is-active .hamburger-inner:before{background-color:#000}.hamburger-box{width:40px;height:24px;display:inline-block;position:relative}.hamburger-inner{display:block;top:50%;margin-top:-2px}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{width:40px;height:4px;background-color:#000;border-radius:4px;position:absolute;transition-property:transform;transition-duration:.15s;transition-timing-function:ease}.hamburger-inner:after,.hamburger-inner:before{content:"";display:block}.hamburger-inner:before{top:-10px}.hamburger-inner:after{bottom:-10px}.hamburger--spring .hamburger-inner{top:2px;transition:background-color 0s linear .13s}.hamburger--spring .hamburger-inner:before{top:10px;transition:top .1s cubic-bezier(.33333,.66667,.66667,1) .2s,transform .13s cubic-bezier(.55,.055,.675,.19)}.hamburger--spring .hamburger-inner:after{top:20px;transition:top .2s cubic-bezier(.33333,.66667,.66667,1) .2s,transform .13s cubic-bezier(.55,.055,.675,.19)}.hamburger--spring.is-active .hamburger-inner{transition-delay:.22s;background-color:transparent!important}.hamburger--spring.is-active .hamburger-inner:before{top:0;transition:top .1s cubic-bezier(.33333,0,.66667,.33333) .15s,transform .13s cubic-bezier(.215,.61,.355,1) .22s;transform:translate3d(0,10px,0) rotate(45deg)}.hamburger--spring.is-active .hamburger-inner:after{top:0;transition:top .2s cubic-bezier(.33333,0,.66667,.33333),transform .13s cubic-bezier(.215,.61,.355,1) .22s;transform:translate3d(0,10px,0) rotate(-45deg)}@keyframes a{0%{transform:translateY(-100%)}to{transform:translateY(0)}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{scroll-behavior:smooth;font-size:62.5%}body{display:grid;grid-gap:2.5em;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(14,10%);background-color:#333;color:#fff;height:100vh}.sticky{overflow:hidden}a{color:#fff;text-decoration:none}.nav__desktop{display:none}.nav__mobile{display:grid;grid-column:1/3;grid-row:1/2}.nav__mobile-head{display:grid;grid-column:1/3;background-color:#222;z-index:2;padding:1em 0;border-bottom:1px solid #fff;z-index:50}.nav__mobile-logo{display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:Nuosu SIL,serif;grid-column:1/2;transform:scale(1.4)}.nav__mobile-burger{grid-column:2/3;display:flex;justify-content:center}.nav__mobile-burger .hamburger-inner,.nav__mobile-burger .hamburger-inner:after,.nav__mobile-burger .hamburger-inner:before{background-color:#fff;text-align:center}.nav__mobile-burger .hamburger.is-active .hamburger-inner,.nav__mobile-burger .hamburger.is-active .hamburger-inner:after,.nav__mobile-burger .hamburger.is-active .hamburger-inner:before{background-color:#fff}.nav__mobile-body{grid-column:1/3;padding-top:3em;display:flex;flex-direction:column;align-items:center;width:100%;height:100vh;transform:translateY(-100%);transition:transform .5s .1s;background-color:#333;z-index:20}.nav__mobile-body.show-nav{transform:translateY(0)}.nav__mobile-body.show-nav .nav__mobile-link{overflow:hidden;animation:a .5s linear}.nav__mobile-body.show-nav .nav__mobile-link:first-child{animation-delay:.1s}.nav__mobile-body.show-nav .nav__mobile-link:nth-child(2){animation-delay:.2s}.nav__mobile-body.show-nav .nav__mobile-link:nth-child(3){animation-delay:.3s}.nav__mobile-body.show-nav .nav__mobile-hero{animation:a .5s linear;animation-delay:.3s}.nav__mobile-hero{margin-top:3em;padding:2em;height:auto;width:80%;box-shadow:0 0 5px hsla(0,0%,100%,.0666666667);background:linear-gradient(rgba(21,49,66,.8509803922),rgba(21,50,67,.8509803922)),url(../../dist/img/mobile-nav-hero.jpg);background-position:50%;background-size:cover}.nav__mobile-hero-content{padding:1em;display:flex;flex-direction:column;justify-content:center;font-family:Roboto Condensed,sans-serif;border:1px solid #fff}.nav__mobile-quote{margin-bottom:1em;padding:1em;font-size:1.8rem;font-weight:300}.nav__mobile-quote-author{align-self:flex-end;padding-right:1em;padding-bottom:1em;font-family:Dancing Script,cursive;font-size:1.8rem}.nav__mobile-link{display:flex;width:80%;justify-content:space-between;padding:.5em;font-size:2rem;border-bottom:1px solid #fff}.nav__mobile-link a{display:block;width:100%}.boxes,main{grid-column:1/3}.boxes{grid-row:1/14;display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(13,1fr);margin:1em;grid-gap:1em}.boxes__box{height:auto;background:linear-gradient(rgba(21,49,66,.8509803922),rgba(21,50,67,.8509803922)),url(https://picsum.photos/640/360);background-position:50%;background-size:cover}.boxes__box-content{display:flex;flex-direction:column;justify-content:space-evenly;height:100%;width:100%;padding:2em}.boxes__box-title{font-family:Nuosu SIL,serif;font-size:1.4rem;text-transform:uppercase;margin-top:1em;margin-bottom:2em}.boxes__box-text{font-family:Roboto Condensed,sans-serif;font-size:1.5rem;margin-bottom:1em}.boxes__box-author{font-family:Dancing Script,cursive;font-size:2rem;margin-bottom:2em}.boxes__box:nth-child(odd){grid-column:1/2}.boxes__box:nth-child(2n){grid-column:2/3;text-align:right}.boxes__box:first-child,.boxes__box:nth-child(2){grid-row:1/4}.boxes__box:nth-child(3),.boxes__box:nth-child(4){grid-row:4/7}.boxes__box:nth-child(5),.boxes__box:nth-child(6){grid-row:7/10}.boxes__box:nth-child(7),.boxes__box:nth-child(8){grid-row:10/13}@media (min-width:552px){.nav__mobile-logo{text-align:center;grid-column:1/2}.nav__mobile-body{padding-top:4em}.nav__mobile-link{display:flex;width:70%;justify-content:space-between;padding:.5em;font-size:2rem;border-bottom:1px solid #fff}.nav__mobile-hero{margin-top:4em;height:auto;width:70%;background:linear-gradient(rgba(21,49,66,.8509803922),rgba(21,50,67,.8509803922)),url(../../dist/img/mobile-nav-hero.jpg);background-position:50%;background-size:cover;padding:3em}.nav__mobile-hero-content{padding:2em}.nav__mobile-quote{margin-bottom:2em}.nav__mobile-quote-author{align-self:flex-end}}@media (min-width:768px){body{grid-template-columns:repeat(24,1fr);grid-template-rows:repeat(11,1fr);height:100vh;grid-gap:0}.nav{z-index:10;grid-column:1/4;grid-row:1/12;padding:0}.nav__mobile{display:none}.nav__desktop{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(9,1fr);background-color:#222}.nav__desktop-logo{grid-column:1/3;grid-row:1/3;display:flex;flex-direction:column;justify-content:center;align-items:center;margin:0 auto;font-family:Nuosu SIL,serif;font-size:.6rem;transform:rotate(-90deg) scale(2);cursor:pointer;transition:color .2s}.nav__desktop-logo:hover{color:#aaa}.nav__desktop-link{grid-column:1/3;display:flex;position:relative;justify-content:center;align-items:center}.nav__desktop-link:hover .nav__link{right:-300px}.nav__desktop-link:hover i{color:#aaa}.nav__desktop-link i{font-size:3.2rem;padding:.4em 0;transition:color .2s}.nav__desktop-link .nav__link{position:absolute;right:500px;bottom:0;display:flex;justify-content:flex-end;align-items:center;height:100%;width:300px;padding:0 2em;background-color:#222;font-size:2rem;transition:right .3s ease-out;z-index:-5;overflow:hidden}.nav__desktop-link .nav__link a{padding:1em;transition:color .2s;width:100%;text-align:right}.nav__desktop-link .nav__link a:hover{color:#aaa}.nav__desktop-link .nav__link:before{bottom:20%;transform:scale(0);transform-origin:left}.nav__desktop-link .nav__link:after,.nav__desktop-link .nav__link:before{content:"";position:absolute;width:80%;height:1px;background-color:#fff;right:2em;border:1px solid transparent;border-radius:10px;opacity:0;transition:transform .3s .2s,opacity .6s .2s}.nav__desktop-link .nav__link:after{top:20%;transform:scale(0);transform-origin:right}.nav__desktop-link:hover .nav__link:after,.nav__desktop-link:hover .nav__link:before{transform:scale(1);opacity:.7}main{grid-row:1/14;grid-column:4/25;display:grid;grid-gap:0;grid-template-rows:repeat(21,1fr);grid-template-columns:repeat(14,1fr)}.hero{grid-row:1/5;grid-column:1/21;background:linear-gradient(rgba(0,0,0,.737254902),rgba(0,0,0,.737254902)),url(../../../dist/img/desktop-hero.jpg);background-position:50%;background-size:cover;font-family:Nuosu SIL,serif;display:flex;justify-content:center;align-items:center;font-size:1.5rem}.hero__content{display:flex;flex-direction:column}.hero__content-quote{margin-bottom:.5em}.hero__content-quote-author{align-self:flex-end}.boxes{display:none}}@media (max-height:552px){.nav__desktop-logo{grid-row:1/4;font-size:.6rem;transform:rotate(0) scale(1.5);text-align:center}.boxes{margin-top:3em}.hero{grid-row:1/6;background:linear-gradient(rgba(0,0,0,.737254902),rgba(0,0,0,.737254902)),url(../../../dist/img/desktop-hero.jpg);background-position:50%;background-size:cover;font-size:1.4rem}}@media (min-width:992px){.nav{grid-column:1/3}.nav__desktop-logo{transform:rotate(-90deg) scale(2);margin:6em 0}main{grid-column:3/25}.hero{grid-row:1/6;font-size:1.8rem}}@media (min-width:1200px){.nav__desktop-logo{grid-row:1/4;margin:6em auto}.hero{grid-row:1/6;background:linear-gradient(rgba(0,0,0,.737254902),rgba(0,0,0,.737254902)),url(../../../dist/img/desktop-hero.jpg);background-position:50%;background-size:cover;font-size:2.2rem}}@media (min-height:556px){.nav__desktop-logo{grid-row:1/3;margin:6em auto}}@media (max-height:552px){.hero{font-size:1.4rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
